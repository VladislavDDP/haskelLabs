{-# OPTIONS_GHC -Wno-overlapping-patterns #-}
-- Лабораторна робота 2
-- Виконав студент групи КН-31 Кучерук Владислав


-- 1.4 Переписати список справа налiво.

-- а) без застосування 
reverses :: [a] -> [a]
reverses [] = []
reverses (x:xs) = reverses xs ++ [x]

-- б) з застосуванням вбудованих функцiй.
buildInReverse :: [a] -> [a]
buildInReverse = reverse


-- 2.4 Перемiшування списку з n елементiв: пiсля першого розмiстити останнiй,
-- пiсля другого – передостаннiй тощо. Наприклад вхiдний список
-- "abcde1234"має бути трансформований у "a1b2c3d4e".

-- а) без застосування 
removeLast :: [a] -> [a]
removeLast [_] = []
removeLast (x:xs) = x : removeLast xs 

end :: [a] -> a
end [x] = x
end (_:xs) = end xs

mixListPure :: [a] -> [a]
mixListPure [] = []
mixListPure [x] = [x]
mixListPure (x:xs) = [x] ++ [end xs] ++ mixListPure (removeLast xs)


-- б) з застосуванням вбудованих функцiй.
mixList :: [a] -> [a]
mixList [] = []
mixList [x] = [x]
mixList (x:xs) = [x] ++ [last xs] ++ mixList (init xs)


-- Висновок
-- На даній лабораторній роботі ми навчилися виконувати перетворення масивів з використанням засобів мови Haskell.
-- Ознайомилися з вбудованими функціями та порівняли результат роботи з власно створеними функціями.
-- Так, ми написали функції для видалення останнього елемента зі списку та знаходження кінця списку. 
-- Далі, ми написали два варіанта функцій з перестановками та переконалися в тому, що наші функції працюють коректно.
